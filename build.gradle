
plugins { // 프로젝트에서 사용하는 그레이들 플러그인 정의
    id 'org.springframework.boot' version '3.2.4' apply false
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
}


ext {
    springBootVersion = '3.2.4'
    set('springCloudVersion', "2023.0.2")
}

allprojects { // 모든 프로젝트에 반영되는 부분
    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

}

// 공통으로 적용할 플러그인 & 디펜덴시
def javaProjects = [ // Java 로 작성된 소스코드에 대한 공통작업 선언
                    // app
                     project(":app:app-web-api"),

                    //domain
                     project(":core:core-domain"),
                     project(":core:core-infra-rdms"),

                    // async request
                    project(":queue:queue-client"),

                    // common java values
                    project("common:project-commons")
]
configure(javaProjects) {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "idea"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java-test-fixtures"

    group = "${projectGroup}"
    version = "${projectVersion}-${new Date().format('yyyyMMddHHmmss')}"

    dependencies {
        // logging and test
        implementation("org.springframework.boot:spring-boot-starter-logging")
        testImplementation("org.springframework.boot:spring-boot-starter-test")

        // lombok
        compileOnly("org.projectlombok:lombok")
        annotationProcessor("org.projectlombok:lombok")
        testCompileOnly("org.projectlombok:lombok")
        testAnnotationProcessor("org.projectlombok:lombok")

        testFixturesImplementation("org.projectlombok:lombok")
        testFixturesAnnotationProcessor("org.projectlombok:lombok")
    }

    tasks.withType(Test) {
        useJUnitPlatform()
    }
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

